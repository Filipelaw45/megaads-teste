services:
  postgres:
    image: postgres:alpine
    container_name: Megaads-db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - '${DB_PORT}:5432'
    networks:
      - cluster
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USER} -d ${DB_NAME}']
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: Megaads-api
    environment:
      - NODE_ENV=${NODE_ENV}
      - API_PORT=${API_PORT}
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_ACCESS_EXPIRES_IN=${JWT_ACCESS_EXPIRES_IN}
      - JWT_REFRESH_EXPIRES_IN=${JWT_REFRESH_EXPIRES_IN}
    ports:
      - '${API_PORT}:${API_PORT}'
    networks:
      - cluster
    depends_on:
      postgres:
        condition: service_healthy
    command: sh -c "npm run migration:run && npm run seed && npm run start:prod"

volumes:
  postgres_data:

networks:
  cluster:
    driver: bridge
